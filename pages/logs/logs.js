// 获取应用实例
const app = getApp();

Page({
  data: {
    isLoading: true,      // 判断是否尚在加载中
    article: {}           // 内容数据
  },

  // 页面加载时触发
  onLoad: function () {
    // 这里的Markdown内容，你可以从服务器获取或者内嵌内容
    const markdownContent = `


# 摘要

随着电子商务和自动化技术的快速发展，传统的人工分拣方法已无法满足日益增长的物流需求，因此，引入智能化的自动分拣机器人成为必要^\[1\]^。本系统是一个基于物联网技术的自动分拣机器人，旨在提高工业生产和物流环节的效率与准确性。本自动分拣机器人通过多个传感器的感知层技术，进行实时监测和识别，并用智能的控制层技术，实现了小车的避障运行以及机械臂的分拣动作，通过传输层技术由上位机发送指令实现对物品的实时监测和识别，进而自动完成分拣任务。

关键词：智能化自动分拣机器人，避障运行，分拣效率，准确性，各个节点的高效协同

# 第一章 设计需求分析

## 1.1需求背景

随着电商和物流业务的迅猛发展，包裹处理量急剧增加，传统的人工分拣方式已无法满足高效处理和实时响应的要求。因此，需要一种智能化的解决方案来提高分拣效率、减少人工成本和降低错误率。社会人口红利逐步衰减，劳动力成本压力较大，故降低全社会物流人力成本，降本增效迫在眉睫。

得益于国家政策支持及电商快递行业的高速发展，中国自动分拣设备市场连续多年保持着高速增长态势，高效分拣产品需求旺盛，对分拣设备个性化功能要求高。对自动分拣机器人提出了更高的要求。我们设计了一款物联网平台上的自动分拣机器人，采用物联网技术架构^\[3\]^。该架构包括从传感器数据采集、通过IP和TCP/UDP协议的传输、Arduino和STM32F407的控制、Node.js和Vite.js的前端开发，到Grafana和Prometheus的云端数据监控和可视化展示，使用ROS2作为中间件，其通信基于DDS协议。故本设计的急速分拣机器人旨在满足现代物流行业对高效、准确和自动化分拣的需求。与此同时，这款自动分拣机器人能够24小时不间断运行，不仅显著提升了工作效率，还大大降低了运行成本。与传统人工操作相比，它不需要休息，也没有人为误操作的风险，大幅度减少了人力成本和管理费用。

![图表, 折线图
描述已自动生成](media/image1.jpeg){width="4.069444444444445in"
height="2.2708333333333335in"}

图1.社会劳动人口增长率

![](media/image2.png){width="6.101388888888889in"
height="1.5583333333333333in"}

图2.自动分拣机器人需求量和市场占有率

## 1.2现有产品存在的问题

（1）单机械臂传输速率有限

机械臂均为AGV小车单机械臂情况：机械臂通常具有4到6轴的自由度，主要由电机控制。虽然电机能够流畅地实现PID等控制算法，但其质量大、成本高，并且需要较大的电流，导致性价比不高。此外，单一机械臂在较大范围内传送物品时效果有限，通常需要配合传送带来实现，这进一步增加了系统的整体成本。

（2）人和单AGV小车人机交互效率低

单AGV小车无法利用机械臂进行货物递送，需要人工传递，增加了用工成本。相比之下，使用机械臂进行分拣工作更为高效。单AGV小车的货品大小严格限制在单件，无法装载多种货品，必须严格封装，无法灵活运送。

（3）导航精度低

AGV小车导航主要采用二维码定位，灵活性低，无法适应未来商品的多样性包装。多种定位技术的结合，如多传感器协同使用，能够提高准确度。目前的二维码定位只能在指定区域内运动，低底盘设计限制了其在不同地形下的运动能力，且无法避开突然出现的障碍物，具有局限性。

（4）非嵌入式主板造成的性能冗余

行业内大量方案采用AMD64架构工控机，这类方案占地空间大，更支持PLC而非其他嵌入式设备。英特尔CPU存在性能冗余问题，而嵌入式设备需要的是低成本设备以实现大批量生产。工控机主板型号较少，无法根据自定义需求灵活调整，占用大量空间，不利于解决续航问题。

（5）机器人载重有限，无法分类放置

机器人只能存放单一物件，车上没有完善的仓库，无法分类放置物体，也无法分类倾倒，场景具有局限性。

# 第二章 特色与创新

## 2.1优势与创新点 

为了应对上述问题，我们进行全面整合，得出一个高度可执行的实施方案，针对市面上机器人所出现的问题进行改进。与此同时，我们在系统的可靠性上进行了改进，我们对前端和后端开发进行了优化，采用分布式和容器化技术设计系统。这种设计不仅提高了系统的灵活性和可扩展性，还确保了各个组件之间的高效协作，从而实现更快速的响应和稳定的运行^\[4\]^。这种全面的整合和优化将大大提高自动分拣机器人的整体性能，满足物流和电商行业对分拣效率和准确性的高要求。

与此同时，我们设计的自动分拣机器人相较于传统自动分拣机器人在成本，物品传输效率，AGV小车灵活性、AGV导航、主板性能、载重能力、存储能力等方面具有许多优势。

![](media/image3.png){width="6.101388888888889in" height="2.30625in"}

图3.传统自动分拣机器人和现代自动分拣机器人区别

### 2.1.1提高系统集成度

从感知层、传输层到控制层和云应用的全面整合，使得系统在各个环节之间实现了无缝连接和高效协作。感知层通过多种传感器实时采集环境和物品的信息，为系统提供必要的数据基础^\[5\]^。这些数据经过传输层使用高效的协议，如TCP/UDP和WebSocket，确保信息的快速、安全传输，支持实时决策和响应。

### 2.1.2增强实时性与可靠性

基于ROS2和DDS协议的自动分拣机器人系统通过整合感知层、传输层、控制层和云应用层，确保系统具有实时响应能力和高可靠性的数据传输。在感知层，视觉传感器、条形码/二维码扫描器和重量传感器协同工作，捕捉并识别物品信息。ROS2中的图像处理节点使用OpenCV和机器学习算法来处理图像，实现物品的精确识别。同时，利用ZXing库在ROS2节点中实现高效的二维码识别和解码。在传输层，ROS2内置的DDS协议确保了数据的高效传输^\[6\]^。通过DDS的发布-订阅模型，系统可以实现低延迟和高可靠性的数据通信。物品信息和传感器数据等通过定义的话题进行实时发布和订阅，确保数据在各个节点之间快速传递。服务和动作机制进一步增强了系统的灵活性，支持复杂的请求-响应交互。控制层通过ROS2实现对机器人的指令发送和动作控制。各控制节点接收到感知层的数据后，迅速处理并发送控制指令给执行机构，如机械臂和分拣装置，确保物品的准确分拣。云应用层通过ROS2与云平台的无缝集成，进行数据存储和分析，提供远程监控和系统优化建议。这种基于ROS2和DDS协议的实时数据处理和通信机制，确保了自动分拣机器人系统的高效运作，提升了系统的整体性能和稳定性^\[7\]^。

采用Vite.js和Three.js进行前端开发，Node.js进行后端开发，实现了高效的3D渲染和实时应用场景支持。

### 2.1.3使用分布式与容器化技术

通过Docker和Kubernetes实现应用的容器式部署和管理，提高了系统的灵活性和可扩展性。

首先，分布式架构提高了系统的扩展性。通过将数据存储和处理分散到服务器上，可以轻松增加服务器数量来应对更大的数据量和更复杂的处理任务，而无需对机器人本身进行大幅度的硬件升级。这种架构使得系统能够灵活应对业务需求的变化。

其次，分布式架构提高了数据处理的效率。服务器可以集中处理大量的数据分析和计算任务，利用其强大的处理能力和高效的存储系统，快速处理和响应机器人请求。这不仅减轻了机器人的计算负担，还确保了数据处理的准确性和及时性^\[8\]^。

### 2.1.4使用国际标准的安全通讯与加密技术

通过采用多种安全技术，可以显著提高系统在面对潜在安全威胁时的稳定性和安全性。例如，在
Grafana 中实施防 XSS（跨站脚本攻击）和
CORS（跨域资源共享）攻击的措施，确保用户输入和输出的安全性，防止恶意代码注入和未经授权的跨域请求。此外，ROS2
提供了安全通信机制，如数据加密和认证，以保护数据传输的完整性和机密性。这些技术措施能够有效抵御各种网络攻击，确保系统的可靠运行和数据的安全，提升整个自动分拣机器人系统的安全性和稳定性。

### 2.1.5多功能机器人整合方案

我们开发了一种集成机械臂和AGV小车的多功能机器人。这种设计在AGV小车上安装了多轴机械臂，大大提升了运输与操作的灵活性。传统系统中，AGV小车通常依赖传送带来进行物品的传送，这种方法不仅增加了系统的复杂性和成本，还限制了其在不同场景中的应用。我们的多功能机器人通过将机械臂直接集成到AGV小车上，成功减少了对传送带的依赖，从而降低了整体成本。

为了进一步优化成本，我们采用了大扭矩舵机替代传统电机。尽管舵机的成本相对较低，但它们仍能提供足够的动力来完成复杂的操作。通过利用样条函数，我们实现了舵机的灵活、流畅操作，使其在执行精细任务时表现出色。这种设计不仅降低了成本，还确保了机械臂在各类任务中的高效性和精确性。

这种多功能机器人的应用范围非常广泛，可以在制造业、物流、仓储等领域中发挥重要作用。它不仅能够高效地完成物品的拾取和放置^\[9\]^，还能灵活应对各种复杂的工作环境。通过集成先进的导航和定位技术，如多传感器协同工作和实时数据分析，我们的机器人能够在复杂的环境中自如导航，并避开突然出现的障碍物。

总体来说，这种多功能机器人的开发，标志着AGV小车和机械臂技术的一次重要突破。它不仅在性能和成本上有显著优势，还展示了我们在机器人技术创新上的卓越能力。通过这种创新设计，我们期望能在多个行业中推动自动化进程，提高生产效率和灵活性，同时降低企业的运营成本。

### 2.1.6 AGV小车导航技术的优化

本机器人通过集成多种传感器技术来实现高精度的导航和定位。这些传感器包括激光雷达、灰度传感器、里程计、惯性传感器和编码器，各自提供不同类型的数据，协同工作以确保机器人的定位准确度和灵活性。激光雷达能够快速扫描周围环境，生成高分辨率的三维地图，为机器人提供实时的位置信息和障碍物检测功能。灰度传感器则利用光强变化来检测地面标记和环境特征^\[10\]^，进一步增强机器人的环境感知能力。

里程计通过记录轮子转动的次数来计算机器人移动的距离和方向，而惯性传感器则通过测量加速度和角速度来提供机器人运动的姿态信息。这些数据可以弥补激光雷达在特定环境下的不足，确保机器人在各种地形和环境中都能保持稳定的定位。

编码器通过检测电机轴的转动，提供精确的位置信息，帮助机器人实现精确的运动控制和导航。多传感器融合使得机器人能够综合利用各传感器的数据，进行误差校正和数据冗余，提高整体系统的可靠性和准确性。

这种多传感器融合技术不仅提升了机器人的定位精度，还使其具备更高的灵活性和适应性，能够在复杂、多变的环境中高效地完成导航任务。通过实时分析和处理来自各传感器的数据，机器人可以快速响应环境变化，灵活调整导航路径，确保导航过程的安全性和稳定性。

### 2.1.7嵌入式系统的应用与优化

本机器人采用了嵌入式开发板地平线旭日派X3，实现了高效的性能和成本控制。地平线旭日派X3是一款高性能、低功耗的嵌入式开发板，专为边缘计算和智能设备设计。通过使用这款开发板，机器人在不牺牲性能的前提下，显著降低了硬件成本。

此外，地平线旭日派X3还具有高度集成的特点，减少了对额外硬件的需求，从而节约了性能冗余。这意味着机器人可以在较低的硬件成本下，依然实现高性能的导航和定位功能。集成的高效通信接口和丰富的I/O资源，使得传感器数据的采集和处理更加顺畅，进一步提升了系统的稳定性和可靠性。

![](media/image4.png){width="3.4715277777777778in"
height="2.1743055555555557in"}

图4.地平线旭日派X3

通过采用地平线旭日派X3，机器人不仅实现了成本效益，还在性能上达到了预期目标。其灵活的开发环境和强大的扩展能力，使得机器人可以根据实际应用需求进行定制和优化，确保在各种复杂环境中的优异表现。

### 2.1.8机器人存储与分类系统

本机器人内置多层存储系统，专为AGV小车设计，能够按类别高效存储和分发物品。该系统采用分层结构，顶部用于存放轻量和常用物品，中层则适合中等重量和体积的货物，而底层则专门设计用于存放较重或体积较大的物品。这种分类存储不仅提高了物品的存取效率，还增强了机器人在不同场景下的适用性和功能性。例如，在仓库中，机器人可以快速从不同层级获取所需物品，实现高效的物料搬运和分拣操作。同时，该设计也支持灵活的存储空间管理，能够根据实际需求动态调整存储布局，从而提升整个系统的操作灵活性和响应速度。通过这种多层存储系统，机器人能够更好地适应多样化的物流环境，满足不同用户的需求。

![](media/image5.png){width="4.072222222222222in"
height="2.7333333333333334in"}

图5.机器人仓库

# 第三章 功能设计

## 3.1总体叙述

我们的物联网自动分拣小车专为物流和电商行业设计，具备自动分类、智能抓取和精确放置功能。通过内置高精度传感器和先进算法，小车能够识别并分类各种物品，机械臂灵活抓取不同类型的物品，并将其准确放置到指定位置。这不仅大幅提高了分拣效率和准确性，还减少了人工操作中的误差和损坏风险，是提升物流和电商运营效率的理想选择。

![719b063ffdfa05da0d1d673e0a80948](media/image6.png){width="6.206944444444445in"
height="4.228472222222222in"}

图6.机器人结构图

### 3.1.1智能分类及算法

我们的物联网自动分拣小车配备了高精度传感器和摄像头，能够实时识别和分类不同类型的物品。通过OPENCV图像识别技术和YOLO智能算法小车可以根据预设规则对物品进行精准分拣。无论是不同尺寸、重量还是形状的物品，小车都能迅速、准确地进行分类和处理，显著提高分拣效率和准确性，减少人为错误。

采用YOLO算法原因：YOLO
是一个开源的目标检测算法，拥有广泛的社区支持和大量的文献资料。这使得我们可以方便地获取相关的技术支持和更新，同时也可以利用现有的工具和资源进行算法的优化和改进^\[11\]^。YOLO
具有多个迭代版本（如 YOLOV3、YOLOV4、YOLOV5、YOLOV6
等），每个版本在性能和准确性上都有所提升。利用这些迭代版本可以根据项目的具体需求选择最合适的模型版本，以提高视觉识别的准确性和效率。由于
YOLO 的广泛使用，网上有大量关于 YOLO
的实现示例、教程和预训练模型。这些丰富的资源使得我们可以更容易地进行模型训练和优化，降低了开发成本和时间。

采用旭日派x3的原因：地平线旭日派 X3 配备了强大的
BPU，这是一种专门设计用于加速深度学习计算的硬件单元。BPU
的存在能够显著提升 YOLO
算法的推理速度，满足实时视觉识别的性能要求。地平线旭日派 X3
的硬件配置能够满足 YOLO
算法的高性能计算需求。在执行复杂的深度学习模型时，具有较高的计算能力和较低的延迟，从而确保视觉识别任务能够高效、准确地完成。

我们选择 SQLite 作为嵌入式数据库，SQLite
是一个轻量级的数据库，不需要大内存。对于嵌入式系统和资源受限的环境，SQLite
的低内存占用使其成为一个理想选择。SQLite
是一个自包含的数据库，不需要复杂的多级管理^\[12\]^。它将数据库引擎和数据存储整合在一个单一的文件中，这大大简化了数据库的管理和维护工作。

由于 SQLite
的设计目标是最小化资源占用，它能够有效减少不必要的内存占用。对于嵌入式系统而言，这种特性能够优化系统性能，避免不必要的内存浪费。

### 3.1.2灵活抓取与放置

我们开发了一种多功能机器人，通过在AGV小车上安装多轴机械臂，显著提升了系统的灵活性和操作能力。机械臂技术的应用使得机器人能够灵活抓取和放置各种形状和尺寸的货物，确保分拣过程的高效性和精确性。

机械臂的正运动学描述了在给定关节角度的情况下，末端执行器的位置和方向。通过正运动学方程，我们可以精确计算出机械臂末端在三维空间中的位置，使其能够准确地抓取和放置物品。逆运动学则根据末端执行器的目标位置和方向，计算出各个关节的角度。这一过程至关重要，因为它允许机械臂根据需要灵活地调整姿态，以适应不同形状和尺寸的货物。通过逆运动学算法，机械臂可以自动调整关节角度，确保末端执行器准确到达目标位置，从而实现高效的分拣和操作^\[13\]^。

![图片包含 游戏机, 行李, 行李箱
描述已自动生成](media/image7.png){width="3.3944444444444444in"
height="2.901388888888889in"}

图7.机器人机械臂

为了进一步优化成本，我们采用了大扭矩舵机替代传统电机。虽然舵机的成本较低，但它们依然能够提供足够的动力来完成复杂的操作。利用样条函数，我们实现了舵机的灵活、流畅操作，使其在执行精细任务时表现出色。

这种多功能机器人在制造业、物流和仓储等领域有着广泛的应用。它不仅能高效完成物品的拾取和放置，还能灵活应对各种复杂的工作环境。集成的正逆运动学算法确保了机械臂在执行任务时的高精度和高效性，使其能够应对不同形状和尺寸的货物，提升整体系统的自动化水平。

通过集成机械臂和AGV小车，我们开发的多功能机器人在性能和成本上都具有显著优势。机械臂技术的应用不仅提高了系统的灵活性和操作能力，还确保了分拣过程的高效性和精确性^\[14\]^。正逆运动学算法的结合，使得机器人能够在复杂环境中自如操作，适应多种货物类型，为多个行业的自动化进程提供了强有力的支持。

### 3.1.3模块化设计

小车采用模块化设计，各个组件独立，便于维护和升级。用户可以根据需求灵活更换或添加功能模块。

![](media/image8.png){width="2.9583333333333335in"
height="3.2694444444444444in"}

图8.用于抓取的机械臂抓手建模

![okkkkk](media/image9.png){width="5.993055555555555in"
height="3.4722222222222223in"}

图9.机械臂抓手结构

在机械臂的抓取部分，我们的抓手设计能够灵活地夹取各种形状和材质的物体，适用于不规则或者结构复杂的物体。抓手通常通过机械臂的控制系统进行精确的姿态调整，以确保物体的安全抓取和稳定搬运。

这种灵活的设计使机械臂能够在各种工业应用中高效地执行任务，提升了生产效率和操作的多功能性。

### 3.1.4实时状态监测 

通过WebSocket协议，小车能够与服务器进行实时双向通信，使用户可以随时监测小车的状态和运行情况。用户可以实时查看小车的速度、位置、电池电量等信息，当小车遇到紧急情况或异常时，系统能够立即通知用户。用户也可以通过服务器发送指令，远程控制小车的行为，确保系统的透明性和可控性。

### 3.1.5自主导航 

机器人的自主导航依赖于先进的navigation技术，这种技术使机器人能够在未经人类干预的情况下安全、高效地移动和操作。通过激光雷达、摄像头等传感器获取环境数据，并利用SLAM算法生成精确的地图并定位自身位置，机器人能够实时地分析周围的情况，并根据预设的目标和环境条件进行路径规划和决策^\[16\]^。这种自主导航技术不仅在工业自动化、物流管理等领域发挥着重要作用，还为智能家居、服务机器人等应用场景提供了可靠的解决方案。

### 3.1.6自主避障

我们设计的机器人广泛应用激光雷达（LIDAR）技术来实现自主避障能力。激光雷达通过发射激光束并接收其反射回来的信号，能够精确测量周围环境中的物体位置和距离。这些数据被机器人的控制系统用来构建实时的环境地图，准确识别并避开障碍物，从而确保安全和高效的移动^\[15\]^。通过激光雷达技术，机器人能够在复杂多变的环境中自主导航，执行各种任务，包括但不限于仓储管理、服务行业和智能制造。

# 第四章 系统实现

## 4.1急速分拣机器人整体系统架构

本机器人使用物联网技术架构概述如下：从传感器数据采集、通过IP和TCP/UDP协议的传输、Arduino和STM32F407的控制、Node.js和Vite.js的前端开发，到Grafana和Prometheus的云端数据监控和可视化展示，使用ROS2作为中间件，其通信基于DDS协议^\[17\]^。下面内容就感知层，传输层，控制层，软件开发技术，云应用，数据挖掘与可视化应用进行具体解释。

![](media/image10.jpeg){width="6.091666666666667in"
height="3.066666666666667in"}

图10.物联分拣侠整体系统架构

### 4.1.1感知层技术

本系统的感知层技术主要包括各种传感器和设备，用于实时数据采集。具体而言，RPLIDAR用于激光雷达扫描，提供环境的高精度点云数据；摄像头通过OpenCV库进行图像处理和物体识别，捕捉实时视频流；MPU6050作为惯性测量单元（IMU），提供加速度和角速度数据，用于姿态估计和运动检测。这些传感器的数据通过ROS2中间件进行处理和传输，利用其基于DDS协议的发布/订阅模型，实现高效、可靠的实时数据交换和节点间通信^\[18\]^。Arduino和STM32F407控制主板与传感器集成，实现数据采集和初步处理，并通过ROS2将数据传输到主机进行进一步分析和可视化展示。

![D:\\wechat\\WeChat
Files\\wxid_6jsbi8ri9lv522\\FileStorage\\Temp\\eedc7f610a887f45565b915bcd7a2bf.png](media/image11.png){width="4.083333333333333in"
height="2.688888888888889in"}

图11.MPU6050惯性传感器

![D:\\wechat\\WeChat
Files\\wxid_6jsbi8ri9lv522\\FileStorage\\Temp\\75229c927d022340d547cfa386a83e6.jpg](media/image12.jpeg){width="2.75in"
height="2.75in"}

图12.RPLIDAR C1

### 4.1.2传输层技术

本系统的传输层技术涉及多种协议和方法，用于确保数据从感知层设备到控制和数据处理节点的高效、可靠传输。首先，通过IP协议在网络层进行基本的地址和数据包传输。然后，使用TCP/UDP协议进行传输层的数据通信，其中TCP协议提供可靠的、面向连接的数据传输，适用于需要确保数据完整性和顺序的应用，而UDP协议提供无连接的、低延迟的数据传输^\[19\]^。

WebSocket协议用于实现前端与服务器之间的实时双向通信，支持低延迟的数据传输和事件驱动的交互。在系统内部，ROS2中间件采用DDS（Data
Distribution
Service）协议，通过发布/订阅模式实现各节点之间的无缝数据交换，提供高性能、可扩展的通信框架^\[20\]^。此外，通过ROS2的安全功能，确保数据传输的安全性和完整性，包括身份验证和加密传输。综合这些传输技术，本系统能够实现高效、可靠、安全的数据传输，支持复杂的物联网应用需求。

![](media/image13.png){width="5.303632983377078in"
height="3.048412073490814in"}

图13.IP,TCP,WEBSOCKET协议关联

### 4.1.3控制层技术

本系统的控制层技术涉及Arduino和STM32F407控制主板，通过高精度ADC和PWM接口实现对传感器和执行器的精确控制。STM32F407主板采用ARM
Cortex-M4内核，并运行FreeRTOS操作系统，管理多任务调度和资源分配，确保实时性和系统稳定性。控制层还采用了三次样条插值法（cubic
spline interpolation）和逆运动学解算（inverse
kinematics）技术，实现机械臂的平滑运动和准确定位。三次样条插值用于生成机械臂运动路径的平滑曲线，确保位置、速度和加速度的连续性，减少机械臂运动中的抖动^\[21\]^。逆运动学解算则用于计算机械臂各关节的目标角度，以实现末端执行器的精准定位和路径规划。通过这些技术，本系统能够高效、精准地控制各种设备，确保机械臂的平滑运动和实时响应能力。

![D:\\wechat\\WeChat
Files\\wxid_6jsbi8ri9lv522\\FileStorage\\Temp\\a9b6b147e1f8182fc306c9af6fa7597.png](media/image14.png){width="4.989583333333333in"
height="4.104166666666667in"}

图14.Arduino及其拓展板

![D:\\wechat\\WeChat
Files\\wxid_6jsbi8ri9lv522\\FileStorage\\Temp\\0b64f610d1779207f53965812b46b6a.png](media/image15.png){width="4.615277777777778in"
height="3.435416666666667in"}

图15.STM32F407主板

![](media/image16.png){width="6.101388888888889in"
height="2.946527777777778in"}

图16.机械臂逆运动学代码

![D:\\wechat\\WeChat
Files\\wxid_6jsbi8ri9lv522\\FileStorage\\Temp\\a22a0920608939dbde54b4e3c4854b9.png](media/image17.png){width="5.375in"
height="5.052083333333333in"}

图17.运动学抓取流程图

### 4.1.4软件开发技术 

本系统的软件开发技术涵盖前后端开发、数据处理和可视化等方面，采用了多种框架和工具来实现功能优化。前端开发使用Vite.js和Three.js，Vite.js提供快速的构建和开发环境，Three.js用于三维数据的可视化，通过WebGL实现高效的3D渲染。Node.js作为后端框架，处理服务器端逻辑并提供API服务，支持异步I/O操作，适用于实时应用场景。数据处理方面，Flask框架用于实现轻量级的Web服务，处理来自传感器的数据并提供API接口^\[22\]^。SQLite数据库用于存储和管理系统产生的数据，尤其是摄像头实时扫描到的二维码信息，如二维码内容、扫描时间和位置等，这些信息可以用于后续的数据分析和追踪。

Flask与Websocket完成通信代码如下所示：

1.  import cv2

2.  import numpy as np

3.  from pyzbar import pyzbar

4.  from flask import Flask, render_template, Response

5.  from flask_socketio import SocketIO, emit

6.  

7.  app = Flask(\_\_name\_\_)

8.  socketio = SocketIO(app)

9.  

10. def gen_frames():

11.     cap = cv2.VideoCapture(0)  *# Capture from camera*

12.     while True:

13.         success, frame = cap.read()

14.         if not success:

15.             break

16.         else:

17.             decoded_objects = pyzbar.decode(frame)

18.             for obj in decoded_objects:

19.                 points = obj.polygon

20.                 if len(points) \> 4:

21.                     hull = cv2.convexHull(np.array(\[point for point in points\], dtype=np.float32))

22.                     hull = list(map(tuple, np.squeeze(hull)))

23.                 else:

24.                     hull = points

25.                 n = len(hull)

26.                 for j in range(0, n):

27.                     cv2.line(frame, hull\[j\], hull\[(j + 1) % n\], (0, 255, 0), 3)

28. 

29.                 x = obj.rect.left

30.                 y = obj.rect.top

31.                 text = obj.data.decode(\"utf-8\")

32.                 cv2.putText(frame, text, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

33.                 cv2.rectangle(frame, (x, y), (x + obj.rect.width, y + obj.rect.height), (0, 255, 0), 2)

34. 

35.                 *# Send data to the client*

36.                 socketio.emit(\'qrcode\', {\'data\': text})

37. 

38.             ret, buffer = cv2.imencode(\'.jpg\', frame)

39.             frame = buffer.tobytes()

40.             yield (b\'\--frame\\r\\n\'

41.                    b\'Content-Type: image/jpeg\\r\\n\\r\\n\' + frame + b\'\\r\\n\')

42. 

43. \@app.route(\'/\')

44. def index():

45.     return render_template(\'index.html\')

46. 

47. \@app.route(\'/video_feed\')

48. def video_feed():

49.     return Response(gen_frames(), mimetype=\'multipart/x-mixed-replace; boundary=frame\')

50. 

51. if \_\_name\_\_ == \'\_\_main\_\_\':

52.     socketio.run(app, host=\'0.0.0.0\', port=5000, debug=True)

![](media/image18.png){width="5.556356080489938in"
height="3.46876968503937in"}

图18.初始化three.js模型

![](media/image19.png){width="5.4728849518810145in"
height="2.9893438320209973in"}

图19.Node.js项目开发文件夹

### 4.1.5云应用技术

本系统的云应用技术通过一系列集成工具和协议实现了数据采集、存储、监控和实时通信。首先，Prometheus作为核心的数据采集和存储工具，采用其强大的时间序列数据库功能和Scrape机制，从系统的各个节点和设备中定期拉取数据，包括CPU使用率、内存使用情况以及传感器实时数据。这些数据存储在Prometheus的时间序列数据库中，方便快速查询和分析。Grafana与Prometheus集成，用于数据的可视化展示。通过Grafana，用户可以创建自定义仪表盘，实时监控系统的状态和性能，并利用丰富的图表和仪表盘进行数据分析和展示。为了实现前后端的实时双向通信，系统采用WebSocket协议，确保数据的低延迟和高实时性。Node.js与Linux系统命令结合，进一步提升了本地系统性能数据的监控能力。这些云应用技术相辅相成，为系统提供了全面、可靠的云端数据处理和管理解决方案，实现了物联网设备数据的高效采集、存储、监控和实时可视化。

### 4.1.6数据挖掘技术

本系统在数据挖掘技术中采用了YOLOv5模型和地平线X3开发板的BPU芯片，以实现对包裹是否破损的高效检测。YOLOv5是一种先进的目标检测模型，能够在单目摄像头拍摄的图像中快速准确地识别并确定目标物体在图像中的位置。通过利用地平线X3开发板上的BPU（计算单元），该芯片具有强大的并行计算能力和高效的处理性能，进一步加速了图像处理和渲染的过程，极大减少YOLOv5在后处理过程中的耗时。然而，若想最大程度上利用地平线X3开发板上的BPU加速模型推理过程，需要将YOLOv5训练后的pt模型转换为地平线X3开发板BPU所支持的bin模型，同时需要修改YOLOv5的激活函数，使得模型的所有算子都运行在BPU上。系统依托于TROS（基于ROS2的改进版本）进行数据处理和通信，增强了系统的实时性和可靠性。通过大量数据集对YOLOv5模型进行训练，使其在不同光照条件和角度下都能准确检测包裹的破损情况。单目摄像头作为数据源，实时捕捉包裹图像，并将其传送到处理单元进行分析和处理。结合这些技术，系统能够快速、准确地对包裹进行质量检测，大大提高了物流过程中包裹破损检测的效率和可靠性。这一数据挖掘技术确保了系统在复杂的实际环境中依然能够保持高性能和高准确率。

![](media/image20.png){width="5.589583333333334in"
height="2.567361111111111in"}

图20.利用地平线工具链转换bin模型过程图1

![](media/image21.png){width="5.565972222222222in" height="2.55625in"}

图21.利用地平线工具链转换bin模型过程图2

### 4.1.7可视化应用技术

本系统的可视化应用技术采用了多种工具和框架，实现数据的实时展示和分析。核心组件之一是Grafana，它与Prometheus集成，用于数据的可视化展示。Grafana提供丰富的图表和自定义仪表盘，用户可以通过简单的配置实时监控系统状态和性能指标。通过WebSocket协议，系统实现了前后端的实时双向通信，确保数据更新的低延迟和高实时性。此外，Three.js用于3D数据的可视化，通过WebGL实现高效的3D渲染，用户可以在前端页面中直观地查看传感器数据和物联网设备的状态。系统还将摄像头识别到的货物具体情况发布到网页上，提供详细的货物信息和检测结果。通过RVIZ2，从机可以实时查看机器人状态，包括其位置、传感器数据和路径规划等信息。结合这些可视化工具，本系统能够将复杂的数据转化为直观、易于理解的图形和图表，帮助用户实时监控和分析物联网系统的运行状态，从而提高决策效率和系统管理能力。

![](media/image22.png){width="5.710971128608924in"
height="3.088838582677165in"}

图22.Three.js小车模型

![C:\\Users\\20815\\Documents\\WeChat
Files\\wxid_6jsbi8ri9lv522\\FileStorage\\Temp\\b77515a910f5a865740b9fe58f3bcac.jpg](media/image23.jpeg){width="5.305555555555555in"
height="3.9854166666666666in"}

图23.RVIZ2检测ROS2 gmapping建图算法效果（截图）

![](media/image24.png){width="4.638888888888889in"
height="2.6166666666666667in"}

图24.实时检测Camera数据

![](media/image25.png){width="5.481348425196851in"
height="1.6320527121609798in"}

图25.实时预警系统

![](media/image26.png){width="5.814878608923885in"
height="1.9735903324584427in"}

图26.实时数据监控系统

### 4.1.8安全技术

在我们的系统中，安全性和隐私保护是核心关注点之一。我们使用Grafana进行数据可视化，它提供了多种防御手段来防止XSS（跨站脚本攻击）和CORS（跨域资源共享）攻击，从而确保数据的安全传输和展示。此外，ROS2依赖于DDS（数据分发服务）通信系统，这种通信协议不仅具备高容错能力，还提供了分布式架构，能够防止由于单个节点故障导致的系统整体失效。DDS的QoS（服务质量）策略也允许对通信可靠性、延迟和历史数据存储等参数进行细粒度控制，进一步提高了系统的安全性和稳定性^\[23\]^。通过这些技术手段，我们确保了系统在面对潜在安全威胁时仍能保持稳定和安全的运行。

在我们的系统中，安全性和隐私保护是核心关注点之一。我们使用Grafana进行数据可视化，它提供了多种防御手段来防止XSS（跨站脚本攻击）和CORS（跨域资源共享）攻击，从而确保数据的安全传输和展示。Grafana通过配置CORS策略来限制跨域请求，并提供了\`disable_sanitize_html\`选项以禁止不受信任的HTML内容，从而杜绝XSS攻击。

![](media/image27.png){width="5.635187007874015in"
height="3.885495406824147in"}

图27.disable_sanitize_html详细防止XXS攻击代码

此外，ROS2依赖于DDS（数据分发服务）通信系统，这种通信协议不仅具备高容错能力，还提供了分布式架构，能够防止由于单个节点故障导致的系统整体失效。DDS的QoS（服务质量）策略允许对通信可靠性、延迟和历史数据存储等参数进行细粒度控制，进一步提高了系统的安全性和稳定性。通过这些技术手段，我们确保了系统在面对潜在安全威胁时仍能保持稳定和安全的运行。

![](media/image28.png){width="5.103472222222222in"
height="2.6506944444444445in"}

图28.ROS2 DDS通信机制

### 4.1.9分布式与容器化技术

![](media/image29.png){width="4.94821741032371in"
height="2.749996719160105in"}

图29.机器人工作示意

在这个系统中，分布式技术主要体现在多个机器人集群的协调工作上。每个机器人都负责扫描二维码数据，并将这些数据发送到内网的数据库中。数据库作为一个中心节点，接收并存储所有机器人的扫描数据。通过这种分布式的数据采集方式，系统能够有效地收集大量数据，并且每个机器人作为独立的计算节点，能够在数据采集过程中并行工作，提高了整体系统的效率和数据处理能力。从机可以通过TCP/IP协议直接访问内网中的服务器与机器人。

容器化技术在此系统中应用于机器人的应用部署和管理。具体来说，每个机器人的应用程序都被封装在Docker容器中，以确保在不同机器人上的一致性和可移植性。Kubernetes（K8S）作为容器编排工具，通过Master节点管理和控制这些Docker容器的运行。K8S
Master节点可以根据需要分配和调度不同机器人上的Docker应用，从而实现资源的动态分配和优化。这种方式不仅简化了应用的部署和升级，还增强了系统的灵活性和可扩展性。例如，如果某个机器人需要新的功能或更新，只需在相应的Docker镜像中进行更新，然后通过K8S
Master节点将更新后的镜像分发到相应的机器人上即

# 第五章 其他

## 5.1工业设计

自动分拣机器人是物流和电商快递行业的关键工具，旨在解决人工分拣效率低、速度慢和出错率高等问题。其设计不仅要满足功能性需求，还需充分考虑用户体验和环境适应性。主要应用于大型物流公司、电商平台和仓储管理企业，这些用户对分拣效率和准确率要求极高。面对不断上升的劳动力成本压力，他们迫切需要自动化设备来降低运营成本，提高效率。

根据用户需求和市场调研结果，提出一个全新的自动分拣机器人概念方案。该方案结合智能识别、多仓库存储、模块化设计以及节能环保等特点，旨在提供一个高效、可靠、灵活的分拣解决方案。该方案将大幅提升物流分拣效率，降低运营成本，并满足市场对分拣设备个性化功能的高要求，从而推动物流行业的进一步发展。

市场调研显示，在中国，由于国家政策支持和电商快递行业的迅速发展，自动分拣设备市场持续高速增长。市场对高效分拣产品的需求强劲，对个性化功能的要求也在不断提升。当前市场需要更智能化、高效和成本效益高的分拣解决方案，以应对物流行业快速发展和需求变化的挑战。

### 5.1.1外观设计

自动分拣机器人具有符合工业设计要求的现代化外观，设计紧凑、功能模块化，充分考虑了实用性、稳定性和可维护性。

![](media/image30.emf){width="4.186111111111111in"
height="3.7583333333333333in"}

图34.机器人设计图

整体结构：

1.  方形平台设计：该车体整体呈现方形平台结构，配备四个大尺寸麦克纳姆轮，不仅确保了移动时的稳定性和灵活性，还显著提升了承重能力。平台设计使各组件布局合理，安装和维护都极为便捷。

2.  多层结构：车体采用多层结构设计，各层之间通过稳固的支架连接，使其能够承载多种传感器和设备，极大地提升了车体的功能扩展性，适应多样化的任务需求。

<!-- -->

1)  区域设计

自动分拣机器人从结构上可以分为三个主要部分：底部核心控制区域、机械臂抓取结构和存储仓区域。

1.  底部核心控制区域

自动分拣机器人的核心部件位于核心控制区域。该区域包括机器人的控制主板（地平线旭日派X3）、机器人运动控制底盘（基于STM32F407的底盘驱动板、四个直流减速电机和麦克纳姆轮）、电池、RPLIDAR
C1雷达和四个超声波模块等。这些部件共同实现机器人的精确控制与导航。

2.  存储仓区域

位于底层板的上面一层。这两层板之间通过支架和铜柱连接，采用6毫米厚的亚克力板制作，确保稳固耐用且易于拆卸。每个仓库分别由一个舵机控制，便于管理和操作。

3.  机械臂抓取结构

机械臂设计参考了码垛机械臂的结构，具备高效、重复定位精度高和灵活性强的优点。机械臂的云台部分采用360度舵机控制，使其活动范围达到臂长限制内的任意位置，活动范围广泛。在抓手部分，采用吸盘进行物品抓取。吸盘的柔性抓取、快速高效和维护简便等优点，使其能够适应不同形状和尺寸的物品，提高分拣效率和作业安全性。

### 5.1.2多仓库存储系统

利用先进的图像识别和人工智能技术，这些仓库能够一次性处理多个包裹，并将它们快速准确地分拣至不同的分拣区域。这种创新设计显著减少了分拣时间，提升了整体物流效率。每个仓库都具备独立的处理能力，避免了传统单一分拣系统的瓶颈问题。通过这种多仓库分拣系统，企业不仅可以大幅度提高工作效率，还能减少人工操作带来的误差，节省大量人力资源成本。

### 5.1.3节能环保设计

选用低能耗、高效率的驱动系统是实现可持续发展目标的关键一步。在现代分拣系统中，采用这种驱动系统不仅能够大幅度减少能耗，还能显著提高整体运行效率。低能耗驱动系统通过优化能量利用，降低了对电力的需求，减少了运营成本。同时，这种高效驱动系统能在提供强大动力的同时，保持较低的能源消耗，从而提升了设备的运行效率。

## 5.2商业模式

### 5.2.1需求点分析

为了应对电子商务迅速发展带来的物流挑战，公司决定在分拣中心大规模部署自动分拣机器人。此举旨在提升分拣效率、降低运营成本并显著提高客户满意度。

### 5.2.2具体实施方案

为实现物流自动化并提升运营效率，公司拟将现有的机器人分布式部署方案进行商业化。该方案以在一个局域网中部署一台服务器和多台机器人主机为核心，旨在通过先进技术的整合和应用，为客户提供高效、可靠、可扩展的物流管理系统。

机器人主机采用旭日派X3，每台主机上独立部署ROS2、TROS，以支持机器人自主导航和操作。同时，为实现系统的监控与数据收集，每台主机还部署Prometheus和node_exporter节点的Docker镜像，及Kubernetes
slave节点。通过这种方式，每个机器人主机能够独立运行并与服务器保持实时通信。

在服务器端，部署Grafana、SQLite数据库和K8S
master节点。Grafana用于收集和展示各Prometheus节点传来的数据，实现统一监控和维护。SQLite数据库则存储各机器人主机通过socket.io发布的二维码数据，便于集中管理和分析。K8S
master节点负责通过Kubernetes协调和管理各机器人主机上的应用部署，确保系统的稳定运行和快速更新。

Kubernetes
master节点通过K8S实现对各机器人主机的集中管理和维护。当有新的Docker镜像或应用更新时，Master节点能够快速将更新分发至各机器人主机，实现统一更新。这不仅简化了系统的维护工作，还保证了各主机上的软件版本一致性，提升了系统的可靠性和安全性。

Grafana通过整合各Prometheus节点的数据，提供实时监控和告警功能，确保系统在高负荷下的稳定性和可靠性。通过统一的监控平台，运维人员可以及时发现和处理系统中的异常情况，降低故障率，提升系统的整体效率。

通过商业化推广，我们将这一分布式部署方案打造成一套高效、智能、易于维护的物流管理系统，为物流企业提供全方位的解决方案。该系统的高度可扩展性和可靠性，使其能够适应不同规模和需求的物流企业，从而帮助客户提高运营效率，降低人工成本，并在竞争激烈的市场中取得优势。

在商业化过程中，我们将提供全方位的技术支持和培训服务，确保客户能够快速上手并充分利用系统的各项功能。同时，通过持续的研发和更新，我们将不断优化系统性能，满足客户日益增长的需求，保持产品的竞争力和市场领先地位。

### 5.2.3成本优势

开源算法的主要优势在于其显著的成本效益，因为无需支付软件授权费用。这种无授权费用的特点大大降低了开发和实施的总成本，使得项目能够节省资金，将资源投入到其他关键领域，如技术创新和系统优化。此外，开源算法的免费特性使得团队可以灵活地进行实验和调整，而不必担心许可费用的限制，从而加速开发进程并提高系统的性能。

### 5.3 团队分工

刘枢阳：负责底盘程序，雷达程序设计，摄像头程序，机械臂程序，传感器的集成通信。

李德东：负责机械臂设计，仓库设计，底盘结构设计，3D打印，STM32的开发。

王智 ：负责机械臂程序，摄像头视觉识别。

钱基泽：负责辅助底盘调试运行，文书撰写，材料准备。

谢官洋：负责舵机控制，机械臂正运动学程序。

## 5.4 知识产权

### 5.4.1 专利发布

本机器人已完成了知识产权信息申请表的填报，并且学生作为第一发明人，正在进行发明专利的申请。团队正积极准备相关材料，以期通过严格的审查程序，现在通过国家知识产权局发明专利的初审。

![专利图1](media/image31.jpeg){width="2.51875in"
height="3.5590277777777777in"}![专利图2](media/image32.jpeg){width="2.4833333333333334in"
height="3.564583333333333in"}

图35.上海海事大学知识产权信息审核表

### 5.4.2 论文发表

本机器人的技术方案在Academic Journal of Science and Technology
上发表过论文，《Intelligent Decision and Path Planning Algorithm of AGV
Vehicle based on Deep Learning》 ISSN:2771-3032 \|
Vol.11,No.3,2024，通讯作者：刘枢阳。

![d53fd57c1ab7507b49adc6d04a94bcd](media/image33.jpeg){width="2.46875in"
height="4.389583333333333in"}

图36.AJST的论文发表

![微信图片_20241012133055](media/image34.png){width="6.095833333333333in"
height="4.259027777777778in"}

图37.AJST论文接收函

# 

# 参考文献

\[1\] [邢宏军. 面向救灾任务的轮式移动作业机器人柔顺控制及遥操作\[D\].
哈尔滨：哈尔滨工业大学机电工程学院,
2022.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

\[2\]万航.基于物联网技术的智能分拣机器人价值探讨和创新分析\[J\].科技视界,2022(07):29-32.

\[3\]赵威,李振华,刘甜甜等.基于颜色识别的智能分拣机器人的设计与制作\[J\].物联网技术,2021,11(08):54-55+59.

\[4\]王伟宏,陈家明,苏文青等.基于RFID智能分拣系统设计及其应用研究\[J\].机电工程技术,2018,47(03):85-88.

\[5\]熊海东,邓人球,李肖龙等.基于ROS的物流终端智能分拣机器人系统\[J\].中国储运,2023(11):205.

\[6\]
[唐媛红，刘月云.基于机器视觉的采摘机器人分拣控制研究\[J\].农机化研究，2021,43(11):216-220.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[7\]
郭业才，周腾威.基于深度强化对抗学习的图像增强方法\[J\].扬州大学学报(自然科学版),2020,23(2):42-46,51.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[8\]蔡熙,刘登峰,曹翔,项明明.全自动分拣系统助力壹米滴答快递快运融合创新\[J\].物流技术与应用,2021(1):78-80.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[9\]罗欣, 丁晓军. 地面移动作业机器人运动规划与控制研究综述\[J\].
哈尔滨工业大学学报, 2021, 53(1):
1-15.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[10\]齐志刚, 黄攀峰, 刘正雄, 等. 空间冗余机械臂路径规划方法研究\[J\].
自动化学报, 2019, 45(6):
1103-1110.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[11\]李琪璐,路彤,李明宇,等.基于机器视觉的颜色分拣机器人设计\[J\].单片机与嵌入式系统应用,
2022,22(12):54-57.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[12\] [陈良港, 张方, 张建光, 等. 移动机械臂运动学建模与控制\[J\].
国外电子测量技术, 2022, 41(1):
35-40.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[13\]黄磊.自动化立体仓库系统在物流中的应用于发展探讨\[J\].现代工业经济和信息化，2018,8(18):86-87.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[14\]蒋春艳，裘高飞，石继兵，等.仓储物流中并行堆垛机的处理能力分析\[J\].物流科技，2016,39(5):3.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[15\]孙志军，薛磊，许阳明，等.深度学习研究综述\[J\].计算机应用研究，2012,29(8):2806-2810.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[16\]杨利，谢永超.基于PLC和机器视觉的工件自动分拣系统设计\[J\].工业仪表与自动化装置，2022(1):48-51.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[17\]吴旭清.黄家才.周磊.林健.并联机器人智能分拣系统设计\[J\].机电工程,2019,36(02):224-228.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[18\]耿立明.王迪.杨威.机器视觉在工业机器人智能分拣识别中的研究\[J\].电子制作.2018.No.361(20):32-33.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[19\] L. Peilin, Y. Zhen, Z. Wenlong and L. Hong, \"An automatic
sorting system for sorting metal cylindrical workpiece based on machine
vision and PLC technology,\" 2017 2nd International Conference on
Robotics and Automation Engineering (ICRAE), Shanghai, China, 2017, pp.
446-450, doi:
10.1109/ICRAE.2017.8291427.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[20\] X. Fang, \"Application of XueJie Vision System in the Workpiece
Sorting of Huibo Robot,\" 2020 IEEE 3rd International Conference on
Information Systems and Computer Aided Education (ICISCAE), Dalian,
China, 2020, pp. 684-687, doi: 10.1109/ICISCAE51034.2020.9236840.
keywords: {Service robots;Machine
vision;Education;Production;Programming;Pallets;Sorting;single
industrial robot;programming mode;grabbing point;sorting success
rate}.](javascript:this.top.vpn_inject_script(this);vpn_eval((function%20()%20%7b%20void(0)%20%7d).toString().slice(14,%20-2)))

[\[21\]](https://webvpn.shmtu.edu.cn/https/77726476706e69737468656265737421fbf952d2243e635930068cb8/kcms2/article/abstract?v=xEDmK2-VgJiXdXepBD6wR5AB278-JBJlqlsjfNHRN9ie7OtmC2FZjem7dNf68BSbv8tDAzFrN3Sr8mtrGzT3Do4wdy3a5WsNH-j_TEuwoXMZ0LJ68udJInpuEEUxhUGcssC7iqnvb1gzBg0boQdoBQ==&uniplatform=NZKPT&language=CHS)
K. Xia and Z. Weng, \"Workpieces sorting system based on industrial
robot of machine vision,\" 2016 3rd International Conference on Systems
and Informatics (ICSAI), Shanghai, China, 2016, pp. 422-426.

\[22\] J. Dong and Q. Han, \"Research on High Speed Robot Sorting System
Based on Machine Vision Technology,\" 2021 IEEE 4th International
Conference on Information Systems and Computer Aided Education
(ICISCAE), Dalian, China, 2021, pp. 554-558.

\[23\] S. Chen, \"Research and Practice of Industrial Sorting Technology
Based on Machine Vision,\" 2021 6th International Conference on
Intelligent Computing and Signal Processing (ICSP), Xi\'an, China, 2021,
pp. 1075-1078.

`;

    // 使用 towxml 将 Markdown 转换为小程序支持的 WXML 格式
    let result = app.towxml(markdownContent, 'markdown', {
      base: 'https://xxx.com',      // 相对资源的 base 路径
      theme: 'light',               // 主题，默认 'light'
      events: {                    // 为元素绑定的事件方法
        tap: (e) => {
          console.log('Element tapped', e);
        }
      }
    });

    // 更新解析结果，并将加载状态设置为 false
    this.setData({
      article: result,
      isLoading: false  // 解析完成后设置为 false
    });
  }
});
